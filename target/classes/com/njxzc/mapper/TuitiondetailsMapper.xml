<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njxzc.dao.TuitiondetailsMapper">
  <resultMap id="BaseResultMap" type="com.njxzc.model.Tuitiondetails">
    <id column="tdid" jdbcType="INTEGER" property="tdid" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="bookfee" jdbcType="DOUBLE" property="bookfee" />
    <result column="datafee" jdbcType="DOUBLE" property="datafee" />
    <result column="meals" jdbcType="DOUBLE" property="meals" />
    <result column="coupon" jdbcType="VARCHAR" property="coupon" />
    <result column="tuition" jdbcType="DOUBLE" property="tuition" />
    <result column="paymentmethod" jdbcType="INTEGER" property="paymentmethod" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    tdid, sid, pid, bookfee, datafee, meals, coupon, tuition, paymentmethod
  </sql>
  <select id="selectByExample" parameterType="com.njxzc.model.TuitiondetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tuitiondetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tuitiondetails
    where tdid = #{tdid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tuitiondetails
    where tdid = #{tdid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.njxzc.model.TuitiondetailsExample">
    delete from tuitiondetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njxzc.model.Tuitiondetails">
    insert into tuitiondetails (tdid, sid, pid, 
      bookfee, datafee, meals, 
      coupon, tuition, paymentmethod
      )
    values (#{tdid,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, 
      #{bookfee,jdbcType=DOUBLE}, #{datafee,jdbcType=DOUBLE}, #{meals,jdbcType=DOUBLE}, 
      #{coupon,jdbcType=VARCHAR}, #{tuition,jdbcType=DOUBLE}, #{paymentmethod,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.njxzc.model.Tuitiondetails">
    insert into tuitiondetails
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tdid != null">
        tdid,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="bookfee != null">
        bookfee,
      </if>
      <if test="datafee != null">
        datafee,
      </if>
      <if test="meals != null">
        meals,
      </if>
      <if test="coupon != null">
        coupon,
      </if>
      <if test="tuition != null">
        tuition,
      </if>
      <if test="paymentmethod != null">
        paymentmethod,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tdid != null">
        #{tdid,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="bookfee != null">
        #{bookfee,jdbcType=DOUBLE},
      </if>
      <if test="datafee != null">
        #{datafee,jdbcType=DOUBLE},
      </if>
      <if test="meals != null">
        #{meals,jdbcType=DOUBLE},
      </if>
      <if test="coupon != null">
        #{coupon,jdbcType=VARCHAR},
      </if>
      <if test="tuition != null">
        #{tuition,jdbcType=DOUBLE},
      </if>
      <if test="paymentmethod != null">
        #{paymentmethod,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njxzc.model.TuitiondetailsExample" resultType="java.lang.Long">
    select count(*) from tuitiondetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tuitiondetails
    <set>
      <if test="record.tdid != null">
        tdid = #{record.tdid,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.bookfee != null">
        bookfee = #{record.bookfee,jdbcType=DOUBLE},
      </if>
      <if test="record.datafee != null">
        datafee = #{record.datafee,jdbcType=DOUBLE},
      </if>
      <if test="record.meals != null">
        meals = #{record.meals,jdbcType=DOUBLE},
      </if>
      <if test="record.coupon != null">
        coupon = #{record.coupon,jdbcType=VARCHAR},
      </if>
      <if test="record.tuition != null">
        tuition = #{record.tuition,jdbcType=DOUBLE},
      </if>
      <if test="record.paymentmethod != null">
        paymentmethod = #{record.paymentmethod,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tuitiondetails
    set tdid = #{record.tdid,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      bookfee = #{record.bookfee,jdbcType=DOUBLE},
      datafee = #{record.datafee,jdbcType=DOUBLE},
      meals = #{record.meals,jdbcType=DOUBLE},
      coupon = #{record.coupon,jdbcType=VARCHAR},
      tuition = #{record.tuition,jdbcType=DOUBLE},
      paymentmethod = #{record.paymentmethod,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njxzc.model.Tuitiondetails">
    update tuitiondetails
    <set>
      <if test="sid != null">
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="bookfee != null">
        bookfee = #{bookfee,jdbcType=DOUBLE},
      </if>
      <if test="datafee != null">
        datafee = #{datafee,jdbcType=DOUBLE},
      </if>
      <if test="meals != null">
        meals = #{meals,jdbcType=DOUBLE},
      </if>
      <if test="coupon != null">
        coupon = #{coupon,jdbcType=VARCHAR},
      </if>
      <if test="tuition != null">
        tuition = #{tuition,jdbcType=DOUBLE},
      </if>
      <if test="paymentmethod != null">
        paymentmethod = #{paymentmethod,jdbcType=INTEGER},
      </if>
    </set>
    where tdid = #{tdid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njxzc.model.Tuitiondetails">
    update tuitiondetails
    set sid = #{sid,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      bookfee = #{bookfee,jdbcType=DOUBLE},
      datafee = #{datafee,jdbcType=DOUBLE},
      meals = #{meals,jdbcType=DOUBLE},
      coupon = #{coupon,jdbcType=VARCHAR},
      tuition = #{tuition,jdbcType=DOUBLE},
      paymentmethod = #{paymentmethod,jdbcType=INTEGER}
    where tdid = #{tdid,jdbcType=INTEGER}
  </update>
</mapper>