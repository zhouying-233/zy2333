<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njxzc.dao.ClasshourMapper">
  <resultMap id="BaseResultMap" type="com.njxzc.model.Classhour">
    <id column="classhourid" jdbcType="INTEGER" property="classhourid" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="complete" jdbcType="INTEGER" property="complete" />
    <result column="incompelte" jdbcType="INTEGER" property="incompelte" />
    <result column="sumhour" jdbcType="INTEGER" property="sumhour" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    classhourid, major, complete, incompelte, sumhour
  </sql>
  <select id="selectByExample" parameterType="com.njxzc.model.ClasshourExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from classhour
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classhour
    where classhourid = #{classhourid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from classhour
    where classhourid = #{classhourid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.njxzc.model.ClasshourExample">
    delete from classhour
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njxzc.model.Classhour">
    insert into classhour (classhourid, major, complete, 
      incompelte, sumhour)
    values (#{classhourid,jdbcType=INTEGER}, #{major,jdbcType=VARCHAR}, #{complete,jdbcType=INTEGER}, 
      #{incompelte,jdbcType=INTEGER}, #{sumhour,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.njxzc.model.Classhour">
    insert into classhour
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="classhourid != null">
        classhourid,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="complete != null">
        complete,
      </if>
      <if test="incompelte != null">
        incompelte,
      </if>
      <if test="sumhour != null">
        sumhour,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="classhourid != null">
        #{classhourid,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="complete != null">
        #{complete,jdbcType=INTEGER},
      </if>
      <if test="incompelte != null">
        #{incompelte,jdbcType=INTEGER},
      </if>
      <if test="sumhour != null">
        #{sumhour,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njxzc.model.ClasshourExample" resultType="java.lang.Long">
    select count(*) from classhour
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update classhour
    <set>
      <if test="record.classhourid != null">
        classhourid = #{record.classhourid,jdbcType=INTEGER},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.complete != null">
        complete = #{record.complete,jdbcType=INTEGER},
      </if>
      <if test="record.incompelte != null">
        incompelte = #{record.incompelte,jdbcType=INTEGER},
      </if>
      <if test="record.sumhour != null">
        sumhour = #{record.sumhour,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update classhour
    set classhourid = #{record.classhourid,jdbcType=INTEGER},
      major = #{record.major,jdbcType=VARCHAR},
      complete = #{record.complete,jdbcType=INTEGER},
      incompelte = #{record.incompelte,jdbcType=INTEGER},
      sumhour = #{record.sumhour,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njxzc.model.Classhour">
    update classhour
    <set>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="complete != null">
        complete = #{complete,jdbcType=INTEGER},
      </if>
      <if test="incompelte != null">
        incompelte = #{incompelte,jdbcType=INTEGER},
      </if>
      <if test="sumhour != null">
        sumhour = #{sumhour,jdbcType=INTEGER},
      </if>
    </set>
    where classhourid = #{classhourid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njxzc.model.Classhour">
    update classhour
    set major = #{major,jdbcType=VARCHAR},
      complete = #{complete,jdbcType=INTEGER},
      incompelte = #{incompelte,jdbcType=INTEGER},
      sumhour = #{sumhour,jdbcType=INTEGER}
    where classhourid = #{classhourid,jdbcType=INTEGER}
  </update>
</mapper>